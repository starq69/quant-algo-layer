https://stackoverflow.com/questions/10715965/add-one-row-in-a-pandas-dataframe

Adding    1000 rows  5000 rows   10000 rows
.append   1.04       4.84        9.56
.loc      1.16       5.59        11.50
dict      0.23       0.26        0.34       



import pandas
import numpy
import time

numOfRows = 10000
startTime = time.perf_counter()
df1 = pandas.DataFrame(numpy.random.randint(100, size=(5,5)), columns=['A', 'B', 'C', 'D', 'E'])

for i in range( 1,numOfRows):
    #
    # espone un riferimento al quale agganciare i risultati di tutti gli indicatori aventi stato 'attivo' sotto forma di key/value
    # /con key == indicatore (caratteristica)
    #
    df1 = df1.append( dict( (a,numpy.random.randint(100)) for a in ['A','B','C','D','E']), ignore_index=True)


print('Elapsed time: {:6.3f} seconds for {:d} rows'.format(time.perf_counter() - startTime, numOfRows))

startTime = time.perf_counter()
df2 = pandas.DataFrame(numpy.random.randint(100, size=(5,5)), columns=['A', 'B', 'C', 'D', 'E'])
for i in range( 1,numOfRows):
    df2.loc[df2.index.max()+1]  = numpy.random.randint(100, size=(1,5))[0]
print('Elapsed time: {:6.3f} seconds for {:d} rows'.format(time.perf_counter() - startTime, numOfRows))

#
#   SOLUTION 
#
startTime = time.perf_counter()
row_list = []
for i in range (0,5):
    #
    #   crea un dataframe con un dizionario degli indicatori aventi stato 'attivo' : ['A','B', ...] 
    #   (sostituire questo fattore con lo stack dei nomi (attributo i.name->colonna dataframe) degli 
    #   indicatori attivi) 
    #
    row_list.append(dict( (a,numpy.random.randint(100)) for a in ['A','B','C','D','E']))
for i in range( 1,numOfRows):
    #
    # espone un riferimento al quale agganciare i risultati degli indicatori aventi stato 'attivo' 
    # (che lo forniscono per la key == datetimeperiod)
    # con key/colonna dataframe == indicatore (caratteristica)    
    #
    dict1 = dict( (a,numpy.random.randint(100)) for a in ['A','B','C','D','E'])   
    # dict1 = dict( [i_list.value(context_data) fon i_list in active_indicators_stack])
    row_list.append(dict1)

df3 = pandas.DataFrame(row_list, columns=['A','B','C','D','E']) ###TBD: index=date_time_period
 
print('Elapsed time: {:6.3f} seconds for {:d} rows'.format(time.perf_counter() - startTime, numOfRows))
